# Notes dynamodb table
notesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: mynote-${self:provider.stage}
    BillingMode: PAY_PER_REQUEST
    AttributeDefinitions:
      - AttributeName: notesId
        AttributeType: S
    KeySchema:
      - AttributeName: notesId
        KeyType: HASH
# Cognito user pool
cognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: mynewnotepool-${self:provider.stage}
    UsernameConfiguration:
      CaseSensitive: false
    AutoVerifiedAttributes:
      - email
    Schema:
      - Name: email
        AttributeDataType: String
        Mutable: false
        Required: true

# User pool web client
cognitoUserPoolWebClient:
  Type: AWS::Cognito::UserPoolClient
  Properties:
    UserPoolId: !Ref cognitoUserPool
    ClientName: web
    AllowedOAuthFlowsUserPoolClient: True
    CallbackURLs:
      - https://example.com/callback
    LogoutURLs:
      - https://example.com/signout
    AllowedOAuthFlows:
      - code
      - implicit
    AllowedOAuthScopes:
      - phone
      - email
      - openid
      - profile
    SupportedIdentityProviders:
      - COGNITO

# User pool domain
cognitoUserPoolDomain:
  Type: AWS::Cognito::UserPoolDomain
  Properties:
    UserPoolId: !Ref cognitoUserPool
    Domain: mynewnotecd-${self:provider.stage}

# Application parameters
userPoolArn:
  Type: AWS::SSM::Parameter
  Properties:
    Name: /${self:provider.stage}/userPoolArn
    Type: String
    Value: !GetAtt cognitoUserPool.Arn
